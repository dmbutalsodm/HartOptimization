<div id="contentholder">
    <img src="/images/op.png" style="width:20%" />
    <span class="title is-4" style="margin: 5px 0 5px 0;">Op {{this.op.opCode}} - {{this.op.opName}}</span>
    <span style="width: 80%; text-align:center;"><strong>Check boxes of the tools that this op requires to complete. Click the button below to save.</strong></span>
    <a href="/parts/{{this.op.parentPartId}}" class="button is-info">Back to part</a>
    <button class="button is-success" onclick="saveChanges(this)">Save changes</button>
    <input id="toolsearch" style="width: 80%" class="input" type="text" placeholder="Search for a tool.">
    <div id="toolbox">
        {{#each this.tools}}
            <div class="toolcard box" id="{{id}}" searchstring="{{generateSearchString attributes}}">
                <input type="checkbox" toolname="{{id}}" onclick="markChanged(this)">
                <p class="toolattributesprinted {{id}}">{{prettyStringifyObject attributes}}</p>
            </div>
        {{/each}}
    </div>
</div>

<style>
    input[type='checkbox'] {
        zoom: 1.75;
        margin-right: 5px;
    }

    .toolcard { 
        display: flex;
        flex-direction: row;
        align-items: center;
        min-height: 50px;
        width: 100%;
        border: 1px solid rgb(201, 201, 201);
    }
    
    #contentholder {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    #contentholder > * {
        margin-top: 2px;
        margin-bottom: 2px;
    }

    #toolbox {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 90%;
    }

    #toolbox > * {
        margin-bottom: 2px;
        margin-top: 2px;
    }
</style>

<script>
    axios.get('http://localhost:3000/api/ops/{{this.op.opId}}').then(r => {
        r.data.tools.forEach(t => {
            document.querySelector(`[toolname=${t}]`).checked = true;
        })
    })

    document.getElementById("toolsearch").addEventListener('input', (event) => {
        let search = event.srcElement.value.trim();
        if (!search) {
            document.querySelectorAll(".toolcard").forEach(element => element.style.display = "flex");
            return;
        }
        document.querySelectorAll(".toolcard").forEach(element => {
                element.style.display = (element.getAttribute("searchstring").indexOf(search) == -1 ? "none" : "flex");
        })
        
    })

    function markChanged(element) {
        element.setAttribute("changed", "true")
    }

    function saveChanges(a) {
        a.classList.add("is-loading");
        setTimeout(() => a.classList.remove("is-loading"), 250 + Math.floor(Math.random() * 500));

        let toAdd = [];
        let toDelete = [];
        let changed = document.querySelectorAll('[type="checkbox"][changed="true"]').forEach(box => {
            box.checked ? toAdd.push(box.getAttribute("toolname")) : toDelete.push(box.getAttribute("toolname"));
        })
        
        if (toAdd.length || toDelete.length) axios.post("http://localhost:3000/api/ops/updatetools", {opId: `{{this.op.opId}}`, toAdd, toDelete});
    }
</script>