<div id="maincontainer">
    <strong>Adding a new tool:</strong>
    <span id="namereq">Name and pockets are the only required fields, <span style="font-size: 12pt">but you can add any additional info you would like.</span></span>
    <span>Any pair with either field blank will be ignored.</span>
    <img src="/images/tool.png" style="margin: 5px; width: 100px"/>
    <div id="kvpcontainer" action="http://{{WEBSITE_IP}}:3000/machines">
        {{>keyvaluepair initialKeyValue="name" readonly="true"}}
        <div class="keyvaluepair-partial-kvp-container" style="display: flex; flex-direction: row; justify-content: center; align-items: center;">
            <input class="input" style="width:40%" type="text" placeholder="key" value="pockets" readonly="">
            <span><strong>|</strong></span>
            <input class="input" style="width:40%" type="text" placeholder="value" value="" type="number">
        </div>
    </div>
    <button style="margin: 5px 0 5px 0" class="button is-info" onclick="addBlankAttribute()">Add another attribute</button>
    <button id="submitbutton" style="margin: 5px 0 5px 0" class="button is-info" onclick="submitForm()">Save this tool</button>
</div>

<style>
    #maincontainer {
        display: flex;
        align-items: center;
        flex-direction: column;
        width: 100%;
    }

    #kvpcontainer > * {
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>

<script>
    const kvpraw = `<div style="display: flex; flex-direction: row; justify-content: center; align-items: center;" class="keyvaluepair-partial-kvp-container"><input class="input" style="width:40%" type="text"placeholder="key"/><span><strong> | </strong></span><input class="input" style="width:40%" type="text"placeholder="value"/></div>`
    function addBlankAttribute() {
        document.querySelector("#kvpcontainer").insertAdjacentHTML("beforeend", kvpraw);
    }

    function submitForm() {
        const postBody = {};
        document.querySelectorAll(".keyvaluepair-partial-kvp-container").forEach(kvp => {
            if (!kvp.children[0].value || !kvp.children[2].value) return;
            postBody[kvp.children[0].value.replace(/\\\"\{\}\//g, "")] = kvp.children[2].value.replace(/\\\"\{\}\//g, "");
        })
        if (!postBody.name || !postBody.pockets) {
            let el = document.querySelector("#namereq")
            if (!el.style.fontSize) el.style.fontSize = "12pt"
            el.style.fontSize = `${parseInt(el.style.fontSize) + 2}pt`
            return;
        }

        const subButton = document.querySelector("#submitbutton");
        subButton.setAttribute("onclick", null)
        subButton.classList.add("is-loading");
        return axios.post("http://{{WEBSITE_IP}}:3000/api/tools/", postBody).then(() => {
            setTimeout(() => {
                subButton.textContent = "Success! Redirecting..."
                subButton.classList.remove("is-info")
                subButton.classList.remove("is-loading")
                subButton.classList.add("is-success")
                setTimeout(() => window.location = "http://{{WEBSITE_IP}}/tools", 1500)
            }, 1500)
        })
    }
</script>